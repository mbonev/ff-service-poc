buildscript {
	ext {
		springBootVersion = '2.0.0.M2'
		propdepsVersion = '0.0.9.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:propdeps-plugin:${propdepsVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

sourceSets {
    //a new separate source set for integration tests
	integrationTest {
		java {
            //compileClasspath
            //The classpath to use when compiling the source files of this source set.

            //main.output
            //The output files of the source set, containing its compiled classes and resources.
            compileClasspath += main.output

            //runtimeClasspath
            //The classpath to use when executing the classes of this source set.
            runtimeClasspath += main.output

			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}


configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
 }

task intTest(type: Test)

intTest {
    group 'Build'
    description 'Executes the integration tests.'
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	optional('org.springframework.boot:spring-boot-configuration-processor')
	//compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

    integrationTestCompile('org.springframework.boot:spring-boot-starter-test')
    integrationTestCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

compileJava.dependsOn(processResources)
